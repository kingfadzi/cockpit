import type Ajv from 'ajv';
import type { ErrorObject } from 'ajv';
import { JsonSchema, UISchemaElement } from '../models';
import { JsonFormsCellRendererRegistryEntry, JsonFormsCore, JsonFormsRendererRegistryEntry, JsonFormsState, JsonFormsUISchemaRegistryEntry } from './store';
export declare const errorAt: (instancePath: string, schema: JsonSchema) => (state: JsonFormsCore) => ErrorObject[];
export declare const subErrorsAt: (instancePath: string, schema: JsonSchema) => (state: JsonFormsCore) => ErrorObject[];
export declare const getErrorAt: (instancePath: string, schema: JsonSchema) => (state: JsonFormsState) => ErrorObject<string, Record<string, any>, unknown>[];
export declare const getSubErrorsAt: (instancePath: string, schema: JsonSchema) => (state: JsonFormsState) => ErrorObject<string, Record<string, any>, unknown>[];
export declare const getData: (state: JsonFormsState) => any;
export declare const getSchema: (state: JsonFormsState) => JsonSchema;
export declare const getUiSchema: (state: JsonFormsState) => UISchemaElement;
export declare const getAjv: (state: JsonFormsState) => Ajv;
export declare const getRenderers: (state: JsonFormsState) => JsonFormsRendererRegistryEntry[];
export declare const getCells: (state: JsonFormsState) => JsonFormsCellRendererRegistryEntry[];
export declare const getUISchemas: (state: JsonFormsState) => JsonFormsUISchemaRegistryEntry[];
export declare const extractData: (state: JsonFormsCore) => any;
export declare const extractSchema: (state: JsonFormsCore) => JsonSchema;
export declare const extractUiSchema: (state: JsonFormsCore) => UISchemaElement;
export declare const extractAjv: (state: JsonFormsCore) => Ajv;
export declare const getConfig: (state: JsonFormsState) => any;
